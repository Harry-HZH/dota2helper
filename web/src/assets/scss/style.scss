@import "./variables";
// reset
* {
  box-sizing: border-box;
  outline: none;
}
html {
  font-size: 13px;
}

body {
  margin: 0;
  font-family: Arial, Helvetica, sans-serif;
  line-height: 1.2em;
  background-color: #f1f1f1;
  -webkit-font-smoothing: antialiased;
}

a {
  color: #666;
}

p {
  line-height: 1.5em;
}

@each $colorKey, $color in $colors {
  .text-#{$colorKey} {
    color: $color;
  }
  .bg-#{$colorKey} {
    background-color: $color;
  }
}

// text align
@each $var in (left, center, right) {
  .text-#{$var} {
    text-align: $var !important;
  }
}

@each $sizeKey, $size in $font-sizes {
  .fs-#{$sizeKey} {
    font-size: $size + rem;
    @if $size < 1 {
      transform-origin: left center;
      // width: 100%*(1/$size);
      // height: 100%*(1/$size);
      -webkit-transform: scale($size, $size);
    }
    @if $size > 1.2 {
      line-height: $size + rem;
    }
  }
}
// width, height

.w-100 {
  width: 100%;
}
.h-100 {
  height: 100%;
}

// flex
.d-flex {
  display: flex;
}
.flex-column {
  flex-direction: column;
}
.flex-wrap {
  flex-wrap: wrap;
}

@each $key, $value in $flex-jc {
  .jc-#{$key} {
    justify-content: $value;
  }
}

@each $key, $value in $flex-ai {
  .ai-#{$key} {
    align-items: $value;
  }
}

.flex-1 {
  flex: 1;
}

.flex-grow-1 {
  flex-grow: 1;
}

@each $typeKey, $type in $spacing-type {
  // .m-1
  @each $sizeKey, $size in $spacing-sizes {
    .#{$typeKey}-#{$sizeKey} {
      #{$type}: $size * $spacing-base-size;
    }
  }
  // .mx-1
  @each $sizeKey, $size in $spacing-sizes {
    .#{$typeKey}x-#{$sizeKey} {
      #{$type}-left: $size * $spacing-base-size;
      #{$type}-right: $size * $spacing-base-size;
    }
  }
  // .my-1
  @each $sizeKey, $size in $spacing-sizes {
    .#{$typeKey}y-#{$sizeKey} {
      #{$type}-top: $size * $spacing-base-size;
      #{$type}-bottom: $size * $spacing-base-size;
    }
  }

  //mt-1
  @each $directionKey, $direction in $spacing-directions {
    @each $sizeKey, $size in $spacing-sizes {
      .#{$typeKey}#{$directionKey}-#{$sizeKey} {
        #{$type}-#{$direction}: $size * $spacing-base-size;
      }
    }
  }
  .#{$typeKey} {
    #{$type}: 0;
  }
}

.text-ellipse {
  display: inline-block;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// button
.btn {
  display: flex;
  align-items: center;
  justify-content: center;
  i {
    font-size: 1.5rem;
    font-weight: bold;
    color: map-get($map: $colors, $key: "primary");
    margin-right: 0.5rem;
  }
  border: none;
  border-radius: 0.154rem;
  font-size: map-get($font-sizes, "sm") + rem;
  padding: 0.2rem 0.6rem;
  &.btn-lg {
    background: map-get($map: $colors, $key: "white-1");
    border: 1px solid map-get($map: $colors, $key: "white-2");
    padding: 0.8rem 1rem;
  }
}

.nav {
  display: flex;
  .nav-item {
    border-bottom: 3px solid transparent;
    padding-bottom: 0.2rem;
    &.active {
      color: map-get($map: $colors, $key: "primary");
      border-bottom-color: map-get($map: $colors, $key: "primary");
    }
  }

  &.nav-inverse {
    .nav-item {
      color: map-get($map: $colors, $key: "white");
      &.active {
        border-bottom-color: map-get($map: $colors, $key: "white");
      }
    }
  }
}

// sprite
.sprite {
  background: url(../images/index.png) no-repeat 0 0;
  background-size: 28.846rem;
  display: inline-block;
  width: 3.846rem;
  height: 3.846rem;
  &.sprite-news {
    width: 1.769rem;
    height: 1.538rem;
    background-position: 63.546% 15.517%;
  }
  &.sprite-arrow {
    //箭头样式
    width: 1.231rem;
    height: 1.231rem;
    background-position: 38.577% 52.076%;
    vertical-align: bottom;
  }
}
.video-item{
  width: 50%;
  padding: 0.4rem;
}

.video-icon{
  width: 100%;
}

.video-iframe{
  width: 100%;
  height: 30vh;
}

@each $dir in (top, right, bottom, left) {
  .border-#{$dir} {
    border-#{$dir}: 1px solid $border-color;
  }
}
